{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts","../../src/validators/email.ts"],"names":[],"mappings":"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","file":"3.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n  ],\n})\nexport class LoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ViewController, LoadingController, AlertController } from 'ionic-angular';\nimport { FormBuilder, Validators } from '@angular/forms';\n\nimport { AngularFireAuth } from 'angularfire2/auth';\n\nimport { UserProvider } from '../../providers/user/user';\nimport { EmailValidator } from '../../validators/email';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n\n  public isAuthenticated:boolean = false;\n  public loginForm;\n  private bornesLogin = 'bornes@lefroidplay.com';\n  public role;\n  loading: any;\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    private afAuth: AngularFireAuth,\n    private viewCtrl: ViewController,\n    public formBuilder: FormBuilder,\n    public alertCtrl: AlertController,\n    public loadingCtrl: LoadingController,\n    private userAuth: UserProvider\n  ) {\n    this.loginForm = formBuilder.group({\n      email: ['', Validators.compose([Validators.required, EmailValidator.isValid])],\n      password: ['', Validators.compose([Validators.minLength(6), Validators.required])]\n    });\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad LoginPage');\n  }\n  ionViewCanLeave(): boolean{\n    return this.isAuthenticated;\n  }\n\n\n  dismiss() {\n    //let data = { role: this.role };\n    this.viewCtrl.dismiss();\n  }\n\n  loginUser(): void {\n    let email = this.loginForm.value.email;\n    let valid = this.loginForm.valid;\n    let password = this.loginForm.value.password;\n    if(email == 'borne' && password == 'borne'){\n      email = this.bornesLogin;\n      password = 'bornes';\n      valid = true;\n    }\n    console.log('email ', email, password);\n\n    if (!valid) {\n      console.log(this.loginForm.value);\n    } else {\n      this.userAuth.signIn(email, password).then(authData => {\n        this.loading.dismiss().then(() => {\n          this.isAuthenticated = true;\n          this.role = this.userAuth.role;\n          this.dismiss();\n        });\n      }, error => {\n        this.loading.dismiss().then(() => {\n          let alert = this.alertCtrl.create({\n            message: error.message,\n            buttons: [\n                {\n                  text: \"Ok\",\n                  role: 'cancel'\n                }\n            ]\n          });\n          alert.present();\n        });\n      });\n\n      this.loading = this.loadingCtrl.create();\n      this.loading.present();\n    }\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import {FormControl} from '@angular/forms';\r\n\r\nexport class EmailValidator {\r\n\r\n    static isValid(control: FormControl){\r\n\r\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(control.value);\r\n\r\n      if (re){\r\n        return null;\r\n      }\r\n\r\n      return {\"invalidEmail\": true};\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.ts"],"sourceRoot":""}